{"ast":null,"code":"import { FormGroup } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/create-order.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CreateOrderComponent_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r2.customerName);\n  }\n}\nfunction CreateOrderComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r3.title);\n  }\n}\nexport class CreateOrderComponent {\n  constructor(createOrderService) {\n    this.createOrderService = createOrderService;\n    this.selectCustomers = [];\n    this.selectStatuses = [];\n    this.form = new FormGroup({});\n  }\n  ngOnInit() {\n    this.createOrderService.getSelectListCustomers().subscribe(data => {\n      this.selectCustomers = data;\n    });\n    this.createOrderService.getSelectListStatuses().subscribe(data => {\n      this.selectStatuses = Object.entries(data).map(([id, title]) => ({\n        id: +id,\n        title\n      }));\n    });\n    const today = new Date();\n    this.currentDate = today.toISOString().substring(0, 10);\n  }\n  submitCustomer() {}\n}\nCreateOrderComponent.ɵfac = function CreateOrderComponent_Factory(t) {\n  return new (t || CreateOrderComponent)(i0.ɵɵdirectiveInject(i1.CreateOrderService));\n};\nCreateOrderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateOrderComponent,\n  selectors: [[\"create-order\"]],\n  decls: 26,\n  vars: 7,\n  consts: [[1, \"createOrderContent\"], [1, \"createCustomerFrom\", 3, \"formGroup\", \"ngSubmit\"], [1, \"order-info\"], [1, \"order-info-block\"], [1, \"me-5\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function CreateOrderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"New order\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateOrderComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.submitCustomer();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Order Number:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"p\");\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 4);\n      i0.ɵɵtext(12, \"Order Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"p\", 4);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"label\", 4);\n      i0.ɵɵtext(16, \"Customer:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"select\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateOrderComponent_Template_select_ngModelChange_17_listener($event) {\n        return ctx.selectedValue = $event;\n      });\n      i0.ɵɵtemplate(18, CreateOrderComponent_option_18_Template, 2, 2, \"option\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"br\");\n      i0.ɵɵelementStart(20, \"label\", 4);\n      i0.ɵɵtext(21, \"Status:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"select\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateOrderComponent_Template_select_ngModelChange_22_listener($event) {\n        return ctx.selectedStatusValue = $event;\n      });\n      i0.ɵɵtemplate(23, CreateOrderComponent_option_23_Template, 2, 2, \"option\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"label\", 4);\n      i0.ɵɵtext(25, \"Total Cost:\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.newOrderNumber);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.currentDate);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedValue);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.selectCustomers);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedStatusValue);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.selectStatuses);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.FormGroupDirective],\n  styles: [\".createOrderContent[_ngcontent-%COMP%] {\\r\\n    border: 2px solid #000000;\\r\\n    border-radius: 2%;\\r\\n    padding: 1rem 3rem;\\r\\n    font-weight: 500;\\r\\n}\\r\\n.order-info[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n}\\r\\n.order-info-block[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3JlYXRlLW9yZGVyL2NyZWF0ZS1vcmRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxhQUFhO0FBQ2pCIiwic291cmNlc0NvbnRlbnQiOlsiLmNyZWF0ZU9yZGVyQ29udGVudCB7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjMDAwMDAwO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMiU7XHJcbiAgICBwYWRkaW5nOiAxcmVtIDNyZW07XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG59XHJcbi5vcmRlci1pbmZvIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuLm9yZGVyLWluZm8tYmxvY2sge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,SAAS,QAAQ,gBAAgB;;;;;;;ICcpCC,iCAA+D;IAAAA,YAAuB;IAAAA,iBAAS;;;;IAAlDA,kCAAiB;IAACA,eAAuB;IAAvBA,0CAAuB;;;;;IAKtFA,iCAA8D;IAAAA,YAAgB;IAAAA,iBAAS;;;;IAA3CA,kCAAiB;IAACA,eAAgB;IAAhBA,mCAAgB;;;ADTpF,OAAM,MAAOC,oBAAoB;EAQ/BC,YAAoBC,kBAAsC;IAAtC,uBAAkB,GAAlBA,kBAAkB;IANtC,oBAAe,GAA0B,EAAE;IAC3C,mBAAc,GAAU,EAAE;IAI1B,SAAI,GAAG,IAAIJ,SAAS,CAAC,EAAE,CAAC;EACsC;EAC9DK,QAAQ;IACN,IAAI,CAACD,kBAAkB,CAACE,sBAAsB,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAChE,IAAI,CAACC,eAAe,GAAGD,IAAI;IAC7B,CAAC,CAAC;IAEF,IAAI,CAACJ,kBAAkB,CAACM,qBAAqB,EAAE,CAACH,SAAS,CAACC,IAAI,IAAG;MAC/D,IAAI,CAACG,cAAc,GAAGC,MAAM,CAACC,OAAO,CAACL,IAAI,CAAC,CAACM,GAAG,CAAC,CAAC,CAACC,EAAE,EAAEC,KAAK,CAAC,MAAM;QAAED,EAAE,EAAE,CAACA,EAAE;QAAEC;MAAK,CAAE,CAAC,CAAC;IACvF,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAG,IAAIC,IAAI,EAAE;IACxB,IAAI,CAACC,WAAW,GAAGF,KAAK,CAACG,WAAW,EAAE,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;EAEzD;EAEAC,cAAc,IAEd;;AAzBWpB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXjC1B,8BAAgC;MAC1BA,yBAAS;MAAAA,iBAAK;MAClBA,+BAAkF;MAAzDA;QAAA,OAAY2B,oBAAgB;MAAA,EAAC;MACpD3B,8BAAwB;MAEAA,6BAAa;MAAAA,iBAAQ;MACzCA,yBAAG;MAAAA,YAAkB;MAAAA,iBAAI;MAE3BA,+BAA8B;MACRA,4BAAW;MAAAA,iBAAQ;MACvCA,6BAAgB;MAAAA,aAAe;MAAAA,iBAAI;MAGvCA,iCAAoB;MAAAA,0BAAS;MAAAA,iBAAQ;MACrCA,kCAAoC;MAA5BA;QAAA;MAAA,EAA2B;MACjCA,6EAA+F;MACjGA,iBAAS;MACTA,sBAAM;MACNA,iCAAoB;MAAAA,wBAAO;MAAAA,iBAAQ;MACnCA,kCAA0C;MAAlCA;QAAA;MAAA,EAAiC;MACvCA,6EAAuF;MACzFA,iBAAS;MACTA,iCAAoB;MAAAA,4BAAW;MAAAA,iBAAQ;;;MApBnCA,eAAkB;MAAlBA,oCAAkB;MAIfA,eAAkB;MAAlBA,wCAAkB;MAILA,eAAe;MAAfA,qCAAe;MAI3BA,eAA2B;MAA3BA,2CAA2B;MACRA,eAAkB;MAAlBA,6CAAkB;MAIrCA,eAAiC;MAAjCA,iDAAiC;MACdA,eAAiB;MAAjBA,4CAAiB","names":["FormGroup","i0","CreateOrderComponent","constructor","createOrderService","ngOnInit","getSelectListCustomers","subscribe","data","selectCustomers","getSelectListStatuses","selectStatuses","Object","entries","map","id","title","today","Date","currentDate","toISOString","substring","submitCustomer","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\timce\\source\\repos\\TestTask_Infopulse\\TestTask_Infopulse.Web\\ClientApp\\src\\app\\create-order\\create-order.component.ts","C:\\Users\\timce\\source\\repos\\TestTask_Infopulse\\TestTask_Infopulse.Web\\ClientApp\\src\\app\\create-order\\create-order.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { ISelectListCustomer } from \"../models/selectListCustomer\";\r\nimport { IStatus } from \"../models/status\";\r\nimport { CreateOrderService } from \"../services/create-order.service\";\r\n\r\n@Component({\r\n  selector: 'create-order',\r\n  templateUrl: './create-order.component.html',\r\n  styleUrls: ['./create-order.component.css']\r\n})\r\nexport class CreateOrderComponent implements OnInit {\r\n  currentDate: string | undefined;\r\n  selectCustomers: ISelectListCustomer[] = [];\r\n  selectStatuses: any[] = [];\r\n  selectedValue: any;\r\n  selectedStatusValue: any;\r\n  newOrderNumber!: number;\r\n  form = new FormGroup({})\r\n  constructor(private createOrderService: CreateOrderService) { }\r\n  ngOnInit(): void {\r\n    this.createOrderService.getSelectListCustomers().subscribe(data => {\r\n      this.selectCustomers = data;\r\n    });\r\n\r\n    this.createOrderService.getSelectListStatuses().subscribe(data => {\r\n      this.selectStatuses = Object.entries(data).map(([id, title]) => ({ id: +id, title }));\r\n    });\r\n\r\n    const today = new Date();\r\n    this.currentDate = today.toISOString().substring(0, 10);\r\n\r\n  }\r\n\r\n  submitCustomer() {\r\n\r\n  }\r\n}\r\n","<div class=\"createOrderContent\">\r\n  <h1>New order</h1>\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"submitCustomer()\" class=\"createCustomerFrom\">\r\n    <div class=\"order-info\">\r\n      <div class=\"order-info-block\">\r\n        <label class=\"me-5\">Order Number:</label>\r\n        <p>{{newOrderNumber}}</p>\r\n      </div>\r\n      <div class=\"order-info-block\">\r\n        <label class=\"me-5\">Order Date:</label>\r\n        <p class=\"me-5\">{{currentDate}}</p>\r\n      </div>\r\n    </div>\r\n    <label class=\"me-5\">Customer:</label>\r\n    <select [(ngModel)]=\"selectedValue\">\r\n      <option *ngFor=\"let item of selectCustomers\" [value]=\"item.id\">{{ item.customerName }}</option>\r\n    </select>\r\n    <br />\r\n    <label class=\"me-5\">Status:</label>\r\n    <select [(ngModel)]=\"selectedStatusValue\">\r\n      <option *ngFor=\"let item of selectStatuses\" [value]=\"item.id\">{{ item.title }}</option>\r\n    </select>\r\n    <label class=\"me-5\">Total Cost:</label>\r\n    </form>\r\n</div>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}