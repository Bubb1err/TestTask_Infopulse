{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild, ViewContainerRef } from '@angular/core';\nimport { CreateCustomerComponent } from '../create-customer/create-customer.component';\nimport { CreateOrderComponent } from '../create-order/create-order.component';\nimport { CustomersComponent } from '../customers/customers.component';\nimport { OrdersComponent } from '../orders/orders.component';\nimport { ProductsComponent } from '../products/products.component';\nlet HomeComponent = class HomeComponent {\n  constructor(componentFactoryResolver, createCustomerService, createOrderService) {\n    this.componentFactoryResolver = componentFactoryResolver;\n    this.createCustomerService = createCustomerService;\n    this.createOrderService = createOrderService;\n    this.selectedButton = 'orders';\n  }\n  ngAfterViewInit() {\n    this.renderComponent(this.selectedButton);\n    this.createCustomerService.openForm$.subscribe(openForm => {\n      if (openForm) {\n        this.renderComponent('create-customer');\n      }\n    });\n    this.createOrderService.openForm$.subscribe(openForm => {\n      if (openForm) {\n        this.renderComponent('create-order');\n      }\n    });\n    this.createCustomerService.backToCustomers$.subscribe(() => {\n      this.selectButton('customers');\n    });\n  }\n  selectButton(componentName) {\n    this.selectedButton = componentName;\n    this.renderComponent(componentName);\n  }\n  renderComponent(componentName) {\n    this.contentContainer.clear();\n    let componentClass;\n    switch (componentName) {\n      case 'orders':\n        componentClass = OrdersComponent;\n        break;\n      case 'products':\n        componentClass = ProductsComponent;\n        break;\n      case 'customers':\n        componentClass = CustomersComponent;\n        break;\n      case 'create-customer':\n        componentClass = CreateCustomerComponent;\n        break;\n      case 'create-order':\n        componentClass = CreateOrderComponent;\n        break;\n    }\n    if (componentClass) {\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentClass);\n      const componentRef = this.contentContainer.createComponent(componentFactory);\n      if (componentName === 'create-order') {\n        const lastOrderNumber = this.ordersComponent.getNextOrderNumber();\n        this.createOrderService.setLastOrderNumber(lastOrderNumber);\n      }\n    }\n  }\n};\n__decorate([ViewChild('contentContainer', {\n  read: ViewContainerRef\n}), ViewChild(OrdersComponent)], HomeComponent.prototype, \"ordersComponent\", void 0);\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAoCC,SAAS,EAAEC,gBAAgB,QAAQ,eAAe;AACxG,SAASC,uBAAuB,QAAQ,8CAA8C;AACtF,SAASC,oBAAoB,QAAQ,wCAAwC;AAC7E,SAASC,kBAAkB,QAAQ,kCAAkC;AACrE,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,iBAAiB,QAAQ,gCAAgC;AAS3D,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAOxBC,YAAoBC,wBAAkD,EAC5DC,qBAA4C,EAC5CC,kBAAsC;IAF5B,6BAAwB,GAAxBF,wBAAwB;IAClC,0BAAqB,GAArBC,qBAAqB;IACrB,uBAAkB,GAAlBC,kBAAkB;IAH5B,mBAAc,GAAG,QAAQ;EAG2B;EAEpDC,eAAe;IACb,IAAI,CAACC,eAAe,CAAC,IAAI,CAACC,cAAc,CAAC;IACzC,IAAI,CAACJ,qBAAqB,CAACK,SAAS,CAACC,SAAS,CAACC,QAAQ,IAAG;MACxD,IAAIA,QAAQ,EAAE;QACZ,IAAI,CAACJ,eAAe,CAAC,iBAAiB,CAAC;;IAE3C,CAAC,CAAC;IACF,IAAI,CAACF,kBAAkB,CAACI,SAAS,CAACC,SAAS,CAACC,QAAQ,IAAG;MACrD,IAAIA,QAAQ,EAAE;QACZ,IAAI,CAACJ,eAAe,CAAC,cAAc,CAAC;;IAExC,CAAC,CAAC;IACF,IAAI,CAACH,qBAAqB,CAACQ,gBAAgB,CAACF,SAAS,CAAC,MAAK;MACzD,IAAI,CAACG,YAAY,CAAC,WAAW,CAAC;IAChC,CAAC,CAAC;EACJ;EACAA,YAAY,CAACC,aAAqB;IAChC,IAAI,CAACN,cAAc,GAAGM,aAAa;IACnC,IAAI,CAACP,eAAe,CAACO,aAAa,CAAC;EACrC;EAEAP,eAAe,CAACO,aAAqB;IACnC,IAAI,CAACC,gBAAgB,CAACC,KAAK,EAAE;IAE7B,IAAIC,cAAc;IAElB,QAAQH,aAAa;MACnB,KAAK,QAAQ;QACXG,cAAc,GAAGlB,eAAe;QAChC;MACF,KAAK,UAAU;QACbkB,cAAc,GAAGjB,iBAAiB;QAClC;MACF,KAAK,WAAW;QACdiB,cAAc,GAAGnB,kBAAkB;QACnC;MACF,KAAK,iBAAiB;QACpBmB,cAAc,GAAGrB,uBAAuB;QACxC;MACF,KAAK,cAAc;QACjBqB,cAAc,GAAGpB,oBAAoB;QACrC;IAAM;IAGV,IAAIoB,cAAc,EAAE;MAClB,MAAMC,gBAAgB,GAAG,IAAI,CAACf,wBAAwB,CAACgB,uBAAuB,CAACF,cAAc,CAAC;MAC9F,MAAMG,YAAY,GAAG,IAAI,CAACL,gBAAgB,CAACM,eAAe,CAACH,gBAAgB,CAAC;MAE5E,IAAIJ,aAAa,KAAK,cAAc,EAAE;QACpC,MAAMQ,eAAe,GAAG,IAAI,CAACC,eAAe,CAACC,kBAAkB,EAAE;QACjE,IAAI,CAACnB,kBAAkB,CAACoB,kBAAkB,CAACH,eAAe,CAAC;;;EAGjE;CACD;AA9DGI,YAFDhC,SAAS,CAAC,kBAAkB,EAAE;EAAEiC,IAAI,EAAEhC;AAAgB,CAAE,CAAC,EACvDD,SAAS,CAACK,eAAe,CAAC,sDACO;AAHzBE,aAAa,eALzBR,SAAS,CAAC;EACTmC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACW7B,aAAa,CAiEzB;SAjEYA,aAAa","names":["Component","ViewChild","ViewContainerRef","CreateCustomerComponent","CreateOrderComponent","CustomersComponent","OrdersComponent","ProductsComponent","HomeComponent","constructor","componentFactoryResolver","createCustomerService","createOrderService","ngAfterViewInit","renderComponent","selectedButton","openForm$","subscribe","openForm","backToCustomers$","selectButton","componentName","contentContainer","clear","componentClass","componentFactory","resolveComponentFactory","componentRef","createComponent","lastOrderNumber","ordersComponent","getNextOrderNumber","setLastOrderNumber","__decorate","read","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\timce\\source\\repos\\TestTask_Infopulse\\TestTask_Infopulse.Web\\ClientApp\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { Component, ComponentFactoryResolver, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { CreateCustomerComponent } from '../create-customer/create-customer.component';\r\nimport { CreateOrderComponent } from '../create-order/create-order.component';\r\nimport { CustomersComponent } from '../customers/customers.component';\r\nimport { OrdersComponent } from '../orders/orders.component';\r\nimport { ProductsComponent } from '../products/products.component';\r\nimport { CreateCustomerService } from '../services/create-customer.service';\r\nimport { CreateOrderService } from '../services/create-order.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n  @ViewChild('contentContainer', { read: ViewContainerRef })\r\n    @ViewChild(OrdersComponent)\r\n    ordersComponent!: OrdersComponent;\r\n  contentContainer!: ViewContainerRef;\r\n\r\n  selectedButton = 'orders';\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\r\n    private createCustomerService: CreateCustomerService,\r\n    private createOrderService: CreateOrderService) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.renderComponent(this.selectedButton);\r\n    this.createCustomerService.openForm$.subscribe(openForm => {\r\n      if (openForm) {\r\n        this.renderComponent('create-customer');\r\n      }\r\n    });\r\n    this.createOrderService.openForm$.subscribe(openForm => {\r\n      if (openForm) {\r\n        this.renderComponent('create-order');\r\n      }\r\n    })\r\n    this.createCustomerService.backToCustomers$.subscribe(() => {\r\n      this.selectButton('customers');\r\n    });\r\n  }\r\n  selectButton(componentName: string) {\r\n    this.selectedButton = componentName;\r\n    this.renderComponent(componentName);\r\n  }\r\n\r\n  renderComponent(componentName: string) {\r\n    this.contentContainer.clear();\r\n\r\n    let componentClass;\r\n\r\n    switch (componentName) {\r\n      case 'orders':\r\n        componentClass = OrdersComponent;\r\n        break;\r\n      case 'products':\r\n        componentClass = ProductsComponent;\r\n        break;\r\n      case 'customers':\r\n        componentClass = CustomersComponent;\r\n        break;\r\n      case 'create-customer':\r\n        componentClass = CreateCustomerComponent;\r\n        break;\r\n      case 'create-order':\r\n        componentClass = CreateOrderComponent;\r\n        break;\r\n    }\r\n\r\n    if (componentClass) {\r\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentClass);\r\n      const componentRef = this.contentContainer.createComponent(componentFactory);\r\n\r\n      if (componentName === 'create-order') {\r\n        const lastOrderNumber = this.ordersComponent.getNextOrderNumber();\r\n        this.createOrderService.setLastOrderNumber(lastOrderNumber);\r\n      }\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}