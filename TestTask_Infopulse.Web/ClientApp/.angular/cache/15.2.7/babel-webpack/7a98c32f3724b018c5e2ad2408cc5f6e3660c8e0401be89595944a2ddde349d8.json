{"ast":null,"code":"import { BehaviorSubject, Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CreateCustomerService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this._openForm = new BehaviorSubject(false);\n    this.openForm$ = this._openForm.asObservable();\n    this._customerCreated = new Subject();\n  }\n  get customerCreated$() {\n    return this._customerCreated.asObservable();\n  }\n  triggerCustomerCreated() {\n    this._customerCreated.next();\n  }\n  setOpenForm(value) {\n    this._openForm.next(value);\n  }\n  createCustomer(customerData) {\n    return this.http.post(this.baseUrl + 'customer', customerData);\n  }\n}\nCreateCustomerService.ɵfac = function CreateCustomerService_Factory(t) {\n  return new (t || CreateCustomerService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nCreateCustomerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CreateCustomerService,\n  factory: CreateCustomerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,EAAcC,OAAO,QAAQ,MAAM;;;AAM3D,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,IAAgB,EAA8BC,OAAe;IAA7D,SAAI,GAAJD,IAAI;IAA0C,YAAO,GAAPC,OAAO;IAFjE,cAAS,GAAG,IAAIL,eAAe,CAAU,KAAK,CAAC;IACvD,cAAS,GAAG,IAAI,CAACM,SAAS,CAACC,YAAY,EAAE;IAGjC,qBAAgB,GAAG,IAAIN,OAAO,EAAQ;EAFuC;EAIrF,IAAIO,gBAAgB;IAClB,OAAO,IAAI,CAACC,gBAAgB,CAACF,YAAY,EAAE;EAC7C;EACAG,sBAAsB;IACpB,IAAI,CAACD,gBAAgB,CAACE,IAAI,EAAE;EAC9B;EACAC,WAAW,CAACC,KAAc;IACxB,IAAI,CAACP,SAAS,CAACK,IAAI,CAACE,KAAK,CAAC;EAC5B;EACAC,cAAc,CAACC,YAA6B;IAC1C,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAkB,IAAI,CAACX,OAAO,GAAG,UAAU,EAAEU,YAAY,CAAC;EACjF;;AAlBWb,qBAAqB;mBAArBA,qBAAqB,0CAGc,UAAU;AAAA;AAH7CA,qBAAqB;SAArBA,qBAAqB;EAAAe,SAArBf,qBAAqB;EAAAgB,YAFpB;AAAM","names":["BehaviorSubject","Subject","CreateCustomerService","constructor","http","baseUrl","_openForm","asObservable","customerCreated$","_customerCreated","triggerCustomerCreated","next","setOpenForm","value","createCustomer","customerData","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\timce\\source\\repos\\TestTask_Infopulse\\TestTask_Infopulse.Web\\ClientApp\\src\\app\\services\\create-customer.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { ICreateCustomer } from '../models/CreateCustomer';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreateCustomerService {\r\n  private _openForm = new BehaviorSubject<boolean>(false);\r\n  openForm$ = this._openForm.asObservable();\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) { }\r\n\r\n  private _customerCreated = new Subject<void>();\r\n\r\n  get customerCreated$() {\r\n    return this._customerCreated.asObservable();\r\n  }\r\n  triggerCustomerCreated() {\r\n    this._customerCreated.next();\r\n  }\r\n  setOpenForm(value: boolean) {\r\n    this._openForm.next(value);\r\n  }\r\n  createCustomer(customerData: ICreateCustomer): Observable<ICreateCustomer> {\r\n    return this.http.post<ICreateCustomer>(this.baseUrl + 'customer', customerData);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}