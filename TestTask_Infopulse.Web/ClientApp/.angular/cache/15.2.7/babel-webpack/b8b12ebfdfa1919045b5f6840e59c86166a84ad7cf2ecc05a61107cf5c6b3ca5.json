{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrdersService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.orderNumber = 0;\n  }\n  getLastOrderNumber() {\n    return this.orderNumber;\n  }\n  setLastOrderNumber(orderNumber) {\n    this.orderNumber = orderNumber;\n  }\n  getAll() {\n    return this.http.get(this.baseUrl + 'orders');\n  }\n}\nOrdersService.ɵfac = function OrdersService_Factory(t) {\n  return new (t || OrdersService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nOrdersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OrdersService,\n  factory: OrdersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,aAAa;EACxBC,YAAoBC,IAAgB,EAA8BC,OAAe;IAA7D,SAAI,GAAJD,IAAI;IAA0C,YAAO,GAAPC,OAAO;IACjE,gBAAW,GAAW,CAAC;EADsD;EAGrFC,kBAAkB;IAChB,OAAO,IAAI,CAACC,WAAW;EACzB;EACAC,kBAAkB,CAACD,WAAmB;IACpC,IAAI,CAACA,WAAW,GAAGA,WAAW;EAChC;EACAE,MAAM;IACJ,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAW,IAAI,CAACL,OAAO,GAAG,QAAQ,CAAC;EACzD;;AAZWH,aAAa;mBAAbA,aAAa,0CACsB,UAAU;AAAA;AAD7CA,aAAa;SAAbA,aAAa;EAAAS,SAAbT,aAAa;EAAAU,YAHZ;AAAM","names":["OrdersService","constructor","http","baseUrl","getLastOrderNumber","orderNumber","setLastOrderNumber","getAll","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\timce\\source\\repos\\TestTask_Infopulse\\TestTask_Infopulse.Web\\ClientApp\\src\\app\\services\\orders.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { IOrder } from \"../models/order\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class OrdersService {\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) { }\r\n  private orderNumber: number = 0;\r\n\r\n  getLastOrderNumber(): number {\r\n    return this.orderNumber;\r\n  }\r\n  setLastOrderNumber(orderNumber: number): void {\r\n    this.orderNumber = orderNumber;\r\n  }\r\n  getAll(): Observable<IOrder[]> {\r\n    return this.http.get<IOrder[]>(this.baseUrl + 'orders')\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}