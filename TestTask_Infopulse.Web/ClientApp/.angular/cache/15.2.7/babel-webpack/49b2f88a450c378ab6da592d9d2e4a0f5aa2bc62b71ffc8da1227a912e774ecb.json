{"ast":null,"code":"import { FormControl, FormGroup } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/create-customer.service\";\nimport * as i2 from \"@angular/forms\";\nexport class CreateCustomerComponent {\n  constructor(customerService) {\n    this.customerService = customerService;\n    this.form = new FormGroup({\n      CustomerName: new FormControl(''),\n      CustomerAddress: new FormControl('')\n    });\n    this.customerData = {\n      CustomerName: \"\",\n      CustomerAddress: \"\"\n    };\n  }\n  ngOnInit() {\n    const today = new Date();\n    this.currentDate = today.toISOString().substring(0, 10);\n  }\n  saveCustomer() {\n    this.customerService.createCustomer(this.customerData).subscribe(response => {\n      console.log('Customer created successfully', response);\n    }, error => {\n      console.error('Error creating customer', error);\n    });\n  }\n}\nCreateCustomerComponent.ɵfac = function CreateCustomerComponent_Factory(t) {\n  return new (t || CreateCustomerComponent)(i0.ɵɵdirectiveInject(i1.CreateCustomerService));\n};\nCreateCustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateCustomerComponent,\n  selectors: [[\"create-customer\"]],\n  decls: 21,\n  vars: 3,\n  consts: [[1, \"createCustomerFrom\", 3, \"formGroup\", \"ngSubmit\"], [1, \"createCustomerContent\"], [1, \"createCustomerField\"], [1, \"\"], [1, \"customerInput\"], [\"ngModel\", \"customerData.CustomerName\", 1, \"customerInput\"], [1, \"customerAddress\", \"customerInput\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function CreateCustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"New Customer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateCustomerComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.saveCustomer();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Created date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"p\", 4);\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\");\n      i0.ɵɵtext(11, \"Customer Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\");\n      i0.ɵɵtext(15, \"Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"textarea\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateCustomerComponent_Template_textarea_ngModelChange_16_listener($event) {\n        return ctx.customerData.CustomerAddress = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(17, \"button\", 7);\n      i0.ɵɵtext(18, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\");\n      i0.ɵɵtext(20, \"Cancel\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.currentDate);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.customerData.CustomerAddress);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel],\n  styles: [\".createCustomerFrom[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction:column;\\r\\n}\\r\\n.createCustomerField[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    margin-bottom: 1rem;\\r\\n}\\r\\n.createCustomerContent[_ngcontent-%COMP%] {\\r\\n    max-width: 50%;\\r\\n}\\r\\n.customerAddress[_ngcontent-%COMP%] {\\r\\n    height: 5rem;\\r\\n}\\r\\n.customerInput[_ngcontent-%COMP%] {\\r\\n    width: 70%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3JlYXRlLWN1c3RvbWVyL2NyZWF0ZS1jdXN0b21lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHFCQUFxQjtBQUN6QjtBQUNBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLGNBQWM7QUFDbEI7QUFDQTtJQUNJLFlBQVk7QUFDaEI7QUFDQTtJQUNJLFVBQVU7QUFDZCIsInNvdXJjZXNDb250ZW50IjpbIi5jcmVhdGVDdXN0b21lckZyb20ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcclxufVxyXG4uY3JlYXRlQ3VzdG9tZXJGaWVsZCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxufVxyXG4uY3JlYXRlQ3VzdG9tZXJDb250ZW50IHtcclxuICAgIG1heC13aWR0aDogNTAlO1xyXG59XHJcbi5jdXN0b21lckFkZHJlc3Mge1xyXG4gICAgaGVpZ2h0OiA1cmVtO1xyXG59XHJcbi5jdXN0b21lcklucHV0IHtcclxuICAgIHdpZHRoOiA3MCU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;;;AAUvD,OAAM,MAAOC,uBAAuB;EAalCC,YAAoBC,eAAsC;IAAtC,oBAAe,GAAfA,eAAe;IAVnC,SAAI,GAAG,IAAIH,SAAS,CAAC;MACnBI,YAAY,EAAE,IAAIL,WAAW,CAAS,EAAE,CAAC;MACzCM,eAAe,EAAG,IAAIN,WAAW,CAAS,EAAE;KAC7C,CAAC;IAEF,iBAAY,GAAoB;MAC5BK,YAAY,EAAE,EAAE;MAChBC,eAAe,EAAE;KACpB;EAE6D;EAC9DC,QAAQ;IACN,MAAMC,KAAK,GAAG,IAAIC,IAAI,EAAE;IACxB,IAAI,CAACC,WAAW,GAAGF,KAAK,CAACG,WAAW,EAAE,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;EACzD;EAEAC,YAAY;IACV,IAAI,CAACT,eAAe,CAACU,cAAc,CAAC,IAAI,CAACC,YAAY,CAAC,CAACC,SAAS,CAC9DC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,QAAQ,CAAC;IACxD,CAAC,EACDG,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CACF;EACH;;AA5BWlB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXpCC,0BAAI;MAAAA,4BAAY;MAAAA,iBAAK;MACrBA,+BAAgF;MAAvDA;QAAA,OAAYC,kBAAc;MAAA,EAAC;MAClDD,8BAAmC;MAEfA,6BAAa;MAAAA,iBAAQ;MACrCA,4BAAyB;MAAAA,YAAe;MAAAA,iBAAI;MAE9CA,8BAAiC;MACxBA,+BAAc;MAAAA,iBAAQ;MAC7BA,4BAAmE;MACrEA,iBAAM;MACNA,+BAAiC;MACxBA,yBAAQ;MAAAA,iBAAQ;MACvBA,oCAA2F;MAA3CA;QAAA;MAAA,EAA0C;MAACA,iBAAW;MAI5GA,kCAAsB;MAAAA,qBAAI;MAAAA,iBAAS;MACnCA,+BAAQ;MAAAA,uBAAM;MAAAA,iBAAS;;;MAjBjBA,eAAkB;MAAlBA,oCAAkB;MAIOA,eAAe;MAAfA,qCAAe;MAQQA,eAA0C;MAA1CA,0DAA0C","names":["FormControl","FormGroup","CreateCustomerComponent","constructor","customerService","CustomerName","CustomerAddress","ngOnInit","today","Date","currentDate","toISOString","substring","saveCustomer","createCustomer","customerData","subscribe","response","console","log","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\timce\\source\\repos\\TestTask_Infopulse\\TestTask_Infopulse.Web\\ClientApp\\src\\app\\create-customer\\create-customer.component.ts","C:\\Users\\timce\\source\\repos\\TestTask_Infopulse\\TestTask_Infopulse.Web\\ClientApp\\src\\app\\create-customer\\create-customer.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup } from \"@angular/forms\";\r\nimport { ICreateCustomer } from \"../models/CreateCustomer\";\r\nimport { CreateCustomerService } from \"../services/create-customer.service\";\r\n\r\n@Component({\r\n  selector: 'create-customer',\r\n  templateUrl: './create-customer.component.html',\r\n  styleUrls: ['./create-customer.component.css']\r\n})\r\n\r\nexport class CreateCustomerComponent implements OnInit {\r\n  currentDate: string | undefined;\r\n\r\n  form = new FormGroup({\r\n    CustomerName: new FormControl<string>(''),\r\n    CustomerAddress:  new FormControl<string>('')\r\n  })\r\n\r\n  customerData: ICreateCustomer = {\r\n      CustomerName: \"\",\r\n      CustomerAddress: \"\"\r\n  }; \r\n\r\n  constructor(private customerService: CreateCustomerService) { }\r\n  ngOnInit(): void {\r\n    const today = new Date();\r\n    this.currentDate = today.toISOString().substring(0, 10); \r\n  }\r\n\r\n  saveCustomer() {\r\n    this.customerService.createCustomer(this.customerData).subscribe(\r\n      response => {\r\n        console.log('Customer created successfully', response);\r\n      },\r\n      error => {\r\n        console.error('Error creating customer', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<h1>New Customer</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"saveCustomer()\" class=\"createCustomerFrom\">\r\n  <div class=\"createCustomerContent\">\r\n    <div class=\"createCustomerField\">\r\n      <label class=\"\">Created date:</label>\r\n      <p class=\"customerInput\">{{currentDate}}</p>\r\n    </div>\r\n    <div class=\"createCustomerField\">\r\n      <label>Customer Name:</label>\r\n      <input class=\"customerInput\"  ngModel=\"customerData.CustomerName\"/>\r\n    </div>\r\n    <div class=\"createCustomerField\">\r\n      <label>Address:</label>\r\n      <textarea class=\"customerAddress customerInput\" [(ngModel)]=\"customerData.CustomerAddress\"></textarea>\r\n    </div>\r\n  </div>\r\n</form>\r\n<button type=\"submit\">Save</button>\r\n<button>Cancel</button>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}